sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
rbinom(100,size=1,prob=0.7)
flips2 <- rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
?rpois
rpois(5,10)
my_pois <- replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")
t4 <- strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1, units='days')
quit()
?panel.lmline
?text
?lmline
library("lattice", lib.loc="C:/Program Files/R/R-3.1.2/library")
?lmline
?panel
??panel
library("datasets", lib.loc="C:/Program Files/R/R-3.1.2/library")
data(airquality)
airquality=transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=. ~ Month)
library("ggplot2", lib.loc="C:/Program Files/R/R-3.1.2/library")
qplot(Wind,Ozone,data=airquality,facets=. ~ Month)
str(movies)
qplot(votes,rating,data=movies,smooth="loess")
?qplot
qplot(votes,rating,data=movies)+stats_smooth("loess")
qplot(votes,rating,data=movies)+geom_smooth()
?read.csv
library("ggplot2", lib.loc="C:/Program Files/R/R-3.1.2/library")
normal.s1000 <- rnorm(1000)
normal.s100 <- rnorm(100)
normal.s10000 <- rnorm(10000)
ggplot(NULL,aes(x=normal.s1000)) + geom_histogram()
ggplot(NULL,aes(x=normal.s100)) + geom_histogram()
ggplot(NULL,aes(x=normal.s10000)) + geom_histogram()
ggplot(NULL,aes(x=normal.s10000)) + geom_histogram(binwidth=0.1)
ggplot(NULL,aes(x=normal.s10000)) + geom_histogram(binwidth=0.2)
ggplot(NULL,aes(x=normal.s10000)) + geom_histogram(binwidth=0.5)
normal1000 <- data.frame(normal.s100)
ggplot(normal1000,aes(x=normal.s1000)) + geom_histogram(binwidth=0.5)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density()
summary(normal1000)
summary(normal1000)
length(normal1000)
str(normal1000)
head(normal1000)
ggplot(normal1000,aes(x=normal.s100)) + geom_density()
normal1000 <- data.frame(normal.s1000)
ggplot(normal1000,aes(x=normal.s100)) + geom_density()
ggplot(normal1000,aes(x=normal.s1000)) + geom_density()
poisson1000 <- rpois(1000,3)
ggplot(NULL,aes(x=poisson1000)) + geom_histogram()
ggplot(NULL,aes(x=poisson1000)) + geom_histogram(binwidth=1)
poisson50 <- rpois(50,3)
ggplot(NULL,aes(x=poisson50)) + geom_histogram()
ggplot(NULL,aes(x=poisson50)) + geom_histogram(binwidth=1)
ggplot(NULL,aes(x=poisson50)) + geom_dotplot()
ggplot(NULL,aes(x=poisson50)) + geom_dotplot(binwidth=1)
ggplot(NULL,aes(x=poisson50)) + geom_freqpoly(binwidth=1)
ggplot(normal1000,aes(x=normal.s1000)) + geom_freqpoly()
ggplot(normal1000,aes(x=normal.s1000)) + geom_freqpoly(binwidth=0.3)
ggplot(NULL,aes(x=poisson1000)) + geom_density()
?geom_density
ggplot(NULL,aes(x=poisson1000)) + geom_density(adjust=2)
ggplot(NULL,aes(x=poisson1000)) + geom_density(adjust=0.5)
ggplot(NULL,aes(x=poisson1000)) + geom_density(adjust=0.3)
ggplot(NULL,aes(x=poisson1000)) + geom_density(adjust=0.1)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density()
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(bandwidth=2)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(bandwidth=0.5)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(bandwidth=0.1)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(bandwidth=0.001)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(bandwidth=5)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(adjust=1)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(adjust=2)
ggplot(normal1000,aes(x=normal.s1000)) + geom_density(adjust=0.5)
poisson50 <- rpois(50,3)
p50.df <- data.frame(poisson50)
plot.pois <- ggplot(p50.df,aes(x=poisson50))
plot.pois + geom_histogram(binwidth=1)
plot.pois + geom_dotplot()
plot.pois + geom_dotplot(binwidth=1)
plot.pois + geom_dotplot(binwidth=0.5)
normal.m1.s1 <- rnorm(1000,mean=1,sd=1)
normal.m2.s3 <- rnorm(1000,mean=2,sd=3)
norm.compare <- data.frame(normal.m1.s1,normal.m2.s3)
summary(norm.compare)
names(norm.compare)
?geom_boxplot
?stack
stack(norm.compare)
bplot.data <- stack(norm.compare)
str(bplot.data)
ggplot(bplot.data,aes(x=ind,y=values))
ggplot(bplot.data,aes(x=ind,y=values)) + geom_boxplot()
setwd("~/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","ss06pid.csv",mode="wb")
acs <- read.csv("ss06pid.csv")
summary(acs)
install.packages("sqldf")
library("sqldf", lib.loc="~/R/win-library/3.1")
sqldf("select pwgpt1 from acs where AGEP < 50")
sqldf("select pwgtp1 from acs where AGEP < 50")
length(acs$pwgtp1[acs$AGEP < 50])
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
library("httpuv", lib.loc="~/R/win-library/3.1")
library("httr", lib.loc="~/R/win-library/3.1")
library("jsonlite", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages("Rcpp")
library("httpuv", lib.loc="~/R/win-library/3.1")
library("httr", lib.loc="~/R/win-library/3.1")
library("Rcpp", lib.loc="~/R/win-library/3.1")
library("jsonlite", lib.loc="C:/Program Files/R/R-3.1.2/library")
?source
getwd()
source("github.R")
?content
str(req)
?stop_for_status
?content
req1 <- GET("https://api.github.com/users/jtleek/repos", gtoken)
rawresult <- content(req1)
jsoned <- toJSON(fromJSON(rawresult))
jsoned <- toJSON(rawresult)
?toJSON
names(jsoned)
jsoned1 <- fromJSON(jsoned)
names(jsoned1)
str(jsoned1)
names(jsoned1)
jsoned1$name
jsoned[[5]]
jsoned1[[5]]
jsoned1$name[[5]]
names(jsoned1)
jsoned1$created_at
jsoned1$created_at[[5]]
jsoned1$created_at[jsoned1$name="datasharing"]
jsoned1$created_at[jsoned1$name=="datasharing"]
?nchar
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[1]
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for","Q5.for",mode="wb")
??fixed
?readlines()
?readlines
?read.lines
?readLines
readlines("Q5.for",1)
readLines("Q5.for",1)
weird <- readLines("Q5.for")
str(weird)
head(weird)
head(weird,20)
tail(weird)
?readfwdf
?readfwf
read.fwf("Q5.for",skip=4,widths=C(9,4,4,4,4,4,4,4,4))
read.fwf("Q5.for",skip=4,widths=c(9,4,4,4,4,4,4,4,4))
read.fwf("Q5.for",skip=4,widths=c(10,4,4,4,4,4,4,4,4))
nchar(weird[5])
weird[5]
read.fwf("Q5.for",skip=4,widths=c(10,-3,4,-3,4,-3,4,-3,4,-3,4,-3,4,-3,4,-3,4))
read.fwf("Q5.for",skip=4,widths=c(10,-4,4,-3,4,-3,4,-3,4,-3,4,-3,4,-3,4,-3,4))
weird[5]
read.fwf("Q5.for",skip=4,widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
answer <- read.fwf("Q5.for",skip=4,widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4))
answer[1]
answer[,1]
str(answer)
answer[1,]
sum(answer[4])
library("swirl", lib.loc="~/R/win-library/3.1")
install.packages("swirl")
library("swirl", lib.loc="~/R/win-library/3.1")
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_mb = size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
students3
submit()
?spread
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
bind_rows(passed,failed)
sat
?separate
submit()
submit()
submit()
Sys.get_locale("LC_TIME")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day = today
this_day = today()
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment,hours=8,minutes=34,seconds=55)
this_moment
this_moment <- update(this_moment,hours=0.minutes=7)
this_moment <- update(this_moment,hours=0,minutes=7)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart,hours=17,minutes=34)
depart
arrive <- depart + days(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
with_tz(arrive)
?with_tz
with_tz(arrive,"Asia/Hong_Kong")
arrive <- with_tz(arrive,"Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008")
last_time <- mdy("June 17, 2008",tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
setwd("~/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","ss06hid.csv",mode="wb")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf","DataDict.pdf",mode="wb")
dataQ1 <- read.csv("ss06hid.csv")
summary(dataQ1)
agricultureLogical <- (dataQ1$ACR==3 & dataQ1$AGS ==6)
agricultureLogical
table(agricultureLogical)
which(agricultureLogical)
dataQ1[125]
dataQ1[,125]
dataQ1[125,]
dataQ1[126,]
which(agricultureLogical)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","FGDP.csv",mode="wb")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","Country.csv",mode="wb")
Country <- read.csv("Country.csv")
FGDP <- read.csv("FGDP.csv")
summary(FGDP)
summary(Country)
?merge
merged.data <- merge(Country,FGDP,by.x="CountryCode",by.y="X")
summary(merged.data)
table(COuntryCode)
table(Country$CountryCode)
table(FGDP$X)
table(merged.data$CountryCode)
library("dplyr", lib.loc="~/R/win-library/3.1")
arrange(merged.data,desc(Gross.domestice.product.2012))
arrange(merged.data,desc(Gross.domestic.product.2012))
?arrange
summary(merged.data)
arrange(merged.data,Gross.domestic.product.2012)
summary(merged.data)
table(merged.data$Gross.domestic.product.2012)
head(merged.data)
sortGDP <- arrange(merged.data,desc(Gross.domestic.product.2012))
head(sortGDP)
head(sortGDP,n=20)
str(merged.data)
sortGDP <- arrange(merged.data,desc(as.numeric(Gross.domestic.product.2012)))
head(sortGDP,n=20)
tail(sortGDP,n=20)
?arrange
?as.numeric
clean <- filter(merged.data,is.numeric(Gross.domestic.product.2012))
clean <- mutate(merged.data,GDP <- as.numeric(Gross.domestic.product.2012))
sorted <- arrange(clean,desc(GDP)
)
head(sorted)
head(sorted$CountryCode)
head(sorted$CountryCode,n=20)
head(sorted[c("CountryCode","GDP")])
sorted <- arrange(clean,desc(GDP))
head(sorted[,c("CountryCode","GDP")])
sorted["GDP"]
sorted["CountryCode"]
sorted$GDP
sorted["CountryCode"]
sorted(Table.name)
sorted[Table.name]
sorted["Table.name"]
class(sorted)
sorted["Long.name"]
names(sorted)
clean <- mutate(merged.data,GDP = as.numeric(Gross.domestic.product.2012))
sorted <- arrange(clean,desc(GDP))
sorted["GDP"]
sorted$COuntryCode
sorted$CountryCode
clean <- mutate(merged.data,GDP = as.numeric(as.factor((Gross.domestic.product.2012)))
)
sorted <- arrange(clean,desc(GDP))
sorted$CountryCode
clean <- mutate(merged.data,GDP = as.numeric(as.character((Gross.domestic.product.2012)))
)
sorted <- arrange(clean,desc(GDP))
sorted$CountryCode
summary(FGDP)
?read.csv
FGDP <- read.csv("FGDP.csv",stringsAsFactors=False)
FGDP <- read.csv("FGDP.csv",stringsAsFactors=F)
summary(FGDP)
FGDP$Code
FGDP <- filter(FGDP,Code !="")
FGDP$Code
FGDP <- mutate(FGDP,Ranking=as.numeric(Ranking))
merged.data <- merge(Country,FGDP,by.x="CountryCode",by.y="Code")
sorted <- arrange(merged.data,desc(Ranking))
sorted
head(sorted)
head(sorted$Ranking)
head(sorted["Ranking","CountryCode")
head(sorted["Ranking","CountryCode"])
head(sorted[c("Ranking","CountryCode")])
head(sorted[c("Ranking","CountryCode")],n=15)
summary(sorted$Income.Group)
sorted$Income.Group
table(sorted$Income.Group)
library("plyr", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages("Hmisc")
library("Hmisc", lib.loc="~/R/win-library/3.1")
sorted1 <- mutate(sorted,RankGroup <- cut2(Ranking,g=5))
table(sorted$RankGroup)
table(sorted1$RankGroup)
sorted$RankGroup
sorted1 <- mutate(sorted,RankGroup = cut2(Ranking,g=5))
table(sorted1$RankGroup)
table(sorted1$RankGroup,Income.Group)
table(sorted1$RankGroup,sorted1$Income.Group)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip","Dataset.zip",mode="wb")
library("xts", lib.loc="C:/Program Files/R/R-3.1.2/library")
?decompose
?ts
pritn(ts(1:10,frequency=7,start=c(12,2))calendar=T)
print(ts(1:10,frequency=7,start=c(12,2))calendar=T)
print(ts(1:10,frequency=7,start=c(12,2)),calendar=T)
print(ts(1:10,frequency=7,start=c(12,2)))
ts(1:10,frequency=4,start=c(1959,2))
decompose(ts(1:10,frequency=4,start=c(1959,2)))
testdata <- ts(1:10,frequency=4,start=c(1959,2))
plot(testdata)
?expsmooth
?HoltWinters
?knitr
??knitr
source('C:/Users/Bob/RRPA1/RepData_PeerAssessment1/activity/assign1.R', echo=TRUE)
setwd("C:/Users/Bob/RRPA1/RepData_PeerAssessment1")
source('C:/Users/Bob/RRPA1/RepData_PeerAssessment1/activity/assign1.R', echo=TRUE)
setwd("C:/Users/Bob/RRPA1/RepData_PeerAssessment1/activity")
source('C:/Users/Bob/RRPA1/RepData_PeerAssessment1/activity/assign1.R', echo=TRUE)
source('C:/Users/Bob/RRPA1/RepData_PeerAssessment1/activity/assign1.R', echo=TRUE)
?library
source('C:/Users/Bob/RRPA1/RepData_PeerAssessment1/activity/assign1.R', echo=TRUE)
source("assign1.R")
?title
source("assign1.R")
source("assign1.R")
source("assign1.R")
There is a slight change in mean due to rounding of imputed values.  There is a slight change in median, due to insertion of new values.  The histogram has 8 extra days in the modal class.
